class Solution(object):
    def countPrimeSetBits(self, left, right):
        """
        :type left: int
        :type right: int
        :rtype: int
        """
        def is_prime(n):
    
            if n <= 1:
                return False
            if n <= 3:
                return True
            if n % 2 == 0 or n % 3 == 0:
                return False
            i = 5
            while i * i <= n:
                if n % i == 0 or n % (i + 2) == 0:
                    return False
                i += 6
            return True
        c=0
        bin_arr=[]
        c_one_arr=[]
        for i in range(left,right+1):
            bin_arr.append(bin(i)[2:])
        for j in bin_arr:
            c_one=0
            for k in j:
                if (k=="1"):
                    c_one+=1
            c_one_arr.append(c_one)
        for l in c_one_arr:
            if (is_prime(l)):
                c+=1
        return c
